interface metrics {
    record meter {

    }

    record instrument {
        /// The instrument name is case-insensitive; cannot be null/empty; first character must be alphabetical; other characters must be alphanumeric, `_`, `.`, `-`, and `/`; max length of 255. 
        name: string,
        kind: instrument-kind,
        /// An optional string provided by the author of the instrument. It MUST be case-sensitive (e.g. kb and kB are different units), ASCII string. It can have a maximum length of 63 characters
        unit: option<string>,
        description: option<string>,
        // Per the metrics API docs, there are optional advisory parameters; however, 
        // they aren't yet stable so I'm electing to ignore them for now. 
        // See: https://opentelemetry.io/docs/specs/otel/metrics/api/#instrument
    }

    // Source: https://github.com/open-telemetry/opentelemetry-rust/blob/eac368a7e4addbee3b68c27a0eafae59928ad4c7/opentelemetry-sdk/src/metrics/instrument.rs#L19
    enum instrument-kind {
        /// Identifies a group of instruments that record increasing values synchronously
        /// with the code path they are measuring.
        counter,
        /// A group of instruments that record increasing values in an asynchronous
        /// callback.
        observable-counter,

        /// A group of instruments that record increasing and decreasing values
        /// synchronously with the code path they are measuring.
        up-down-counter,
        /// A group of instruments that record increasing and decreasing values in an
        /// asynchronous callback.
        observable-up-down-counter,

        /// A group of instruments that record a distribution of values synchronously with
        /// the code path they are measuring.
        histogram,

        /// a group of instruments that record current value synchronously with
        /// the code path they are measuring.
        gauge,
        /// a group of instruments that record current values in an asynchronous callback.
        observable-gauge,
    }

    record measurement {
        value: any,
        attributes: list<key-value>
    }

    variant any {
        %bool(bool),
        %s8(s8),
        %s16(s16),
        %s32(s32),
        %s64(s64),
        %u8(u8),
        %u16(u16),
        %u32(u32),
        %u64(u64),
        %f32(f32),
        %f64(f64),
        %char(char),
        %string(string),
    }

    record key-value {
        key: key,
        value: value,
    }

    type key = string;

    /// The value part of attribute `key-value` pairs.
    variant value {
        /// A string value.
        %string(string),
        /// A boolean value.
        %bool(bool),
        /// A double precision floating point value.
        %f64(f64),
        /// A signed 64 bit integer value.
        %s64(s64),
        /// A homogeneous array of string values.
        string-array(list<string>),
        /// A homogeneous array of boolean values.
        bool-array(list<bool>),
        /// A homogeneous array of double precision floating point values.
        f64-array(list<f64>),
        /// A homogeneous array of 64 bit integer values.
        s64-array(list<s64>),
    }
}